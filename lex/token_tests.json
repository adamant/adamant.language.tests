{
    "tokens": [
        {
            "kind": "whitespace",
            "text": " "
        },
        {
            "kind": "whitespace",
            "text": "\t",
            "permute": false
        },
        {
            "kind": "whitespace",
            "text": "\n",
            "permute": false
        },
        {
            "kind": "whitespace",
            "text": "\r\n",
            "permute": false
        },
        {
            "kind": "whitespace",
            "text": "\t\t",
            "permute": false
        },
        {
            "kind": "whitespace",
            "text": "    ",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "/*c*/"
        },
        {
            "kind": "comment",
            "text": "/**/",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "/***/",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "/*/**/",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "/* *c */",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "//c\r"
        },
        {
            "kind": "comment",
            "text": "//\r",
            "permute": false
        },
        {
            "kind": "comment",
            "text": "// foo\n",
            "permute": false
        },
        {
            "kind": "open_brace",
            "text": "{"
        },
        {
            "kind": "close_brace",
            "text": "}"
        },
        {
            "kind": "open_paren",
            "text": "("
        },
        {
            "kind": "close_paren",
            "text": ")"
        },
        {
            "kind": "open_bracket",
            "text": "["
        },
        {
            "kind": "close_bracket",
            "text": "]"
        },
        {
            "kind": "semicolon",
            "text": ";"
        },
        {
            "kind": "comma",
            "text": ","
        },
        {
            "kind": "dot",
            "text": "."
        },
        {
            "kind": "dot_dot",
            "text": ".."
        },
        {
            "kind": "colon",
            "text": ":"
        },
        {
            "kind": "question",
            "text": "?"
        },
        {
            "kind": "pipe",
            "text": "|"
        },
        {
            "kind": "right_arrow",
            "text": "→"
        },
        {
            "kind": "right_arrow",
            "text": "->"
        },
        {
            "kind": "at_sign",
            "text": "@"
        },
        {
            "kind": "caret",
            "text": "^"
        },
        {
            "kind": "plus",
            "text": "+"
        },
        {
            "kind": "minus",
            "text": "-"
        },
        {
            "kind": "asterisk",
            "text": "*"
        },
        {
            "kind": "slash",
            "text": "/"
        },
        {
            "kind": "equals",
            "text": "="
        },
        {
            "kind": "equals_equals",
            "text": "=="
        },
        {
            "kind": "not_equal",
            "text": "≠"
        },
        {
            "kind": "not_equal",
            "text": "=/="
        },
        {
            "kind": "not_equal",
            "text": "!=",
            "is_valid": false
        },
        {
            "kind": "greater_than",
            "text": ">"
        },
        {
            "kind": "greater_than_or_equal",
            "text": "≥"
        },
        {
            "kind": "greater_than_or_equal",
            "text": "⩾"
        },
        {
            "kind": "greater_than_or_equal",
            "text": ">="
        },
        {
            "kind": "less_than",
            "text": "<"
        },
        {
            "kind": "less_than_or_equal",
            "text": "≤"
        },
        {
            "kind": "less_than_or_equal",
            "text": "⩽"
        },
        {
            "kind": "less_than_or_equal",
            "text": "<="
        },
        {
            "kind": "plus_equals",
            "text": "+="
        },
        {
            "kind": "minus_equals",
            "text": "-="
        },
        {
            "kind": "asterisk_equals",
            "text": "*="
        },
        {
            "kind": "slash_equals",
            "text": "/="
        },
        {
            "kind": "dollar",
            "text": "$"
        },
        {
            "kind": "identifier",
            "text": "identifier",
            "value": "identifier"
        },
        {
            "kind": "identifier",
            "text": "a",
            "value": "a",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "n",
            "value": "n",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "z",
            "value": "z",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "A",
            "value": "A",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "N",
            "value": "N",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "Z",
            "value": "Z",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "i",
            "value": "i",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "j",
            "value": "j",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "k",
            "value": "k",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "user",
            "value": "user",
            "permute": false
        },
        {
            "kind": "identifier",
            "text": "T1",
            "value": "T1",
            "permute": false
        },
        {
            "kind": "integer_literal",
            "text": "123",
            "value": 123
        },
        {
            "kind": "string_literal",
            "text": "\"Hello World!\"",
            "value": "Hello World!"
        },
        {
            "kind": "string_literal",
            "text": "\"\u2660\"",
            "value": "\u2660",
            "permute": false
        },
        {
            "kind": "string_literal",
            "text": "\"\\",
            "value": "\\",
            "is_valid": false,
            "permute": false
        },
        {
            "kind": "string_literal",
            "text": "\"\\\"\\n\\r\\0\\t\\u(0)\\u(FFFF)\\u(10FFFF)\\\\\"",
            "value": "\"\n\r\u0000\t\u0000\uFFFF\uDBFF\uDFFF\\",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "public"
        },
        {
            "kind": "keyword",
            "text": "private"
        },
        {
            "kind": "keyword",
            "text": "let",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "var",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "void",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "int",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "uint",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "bool",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "string",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "return",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "class",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "new",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "delete",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "namespace",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "using",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "foreach",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "in",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "if",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "else",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "delete",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "and",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "or",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "xor",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "struct",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "enum",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "byte",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "size",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "protected",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "unsafe",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "safe",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "init",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "self",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "base",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "fn",
            "permute": false
        },
        {
            "kind": "keyword",
            "text": "Self",
            "permute": false
        }
    ],
    "future_tokens": [
        {
            "kind": "escaped_identifier",
            "valid": [
                {
                    "text": "\\var",
                    "value": "var"
                }
            ]
        },
        {
            "kind": "escaped_string_identifier",
            "valid": [
                {
                    "text": "\\\"Hello and Goodbye!\"",
                    "value": "Hello and Goodbye!"
                }
            ]
        }
    ],
    "separate": [
        [ "dot", "dot" ],
        [ "dot", "dot_dot" ],
        [ "plus", "equals" ],
        [ "plus", "equals_equals" ],
        [
            "plus",
            { "not_equal": "=/=" }
        ],
        [ "minus", "equals" ],
        [ "minus", "equals_equals" ],
        [
            "minus",
            { "not_equal": "=/=" }
        ],
        [ "minus", "greater_than" ],
        [ "minus", "greater_than_or_equal" ],
        [ "asterisk", "equals" ],
        [ "asterisk", "equals_equals" ],
        [
            "asterisk",
            { "not_equal": "=/=" }
        ],
        [ "slash", "equals" ],
        [ "slash", "equals_equals" ],
        [
            "slash",
            { "not_equal": "=/=" }
        ],
        [ "slash", "asterisk" ],
        [ "slash", "asterisk_equals" ],
        [ "slash", "slash" ],
        [ "slash", "comment" ],
        [ "slash", "slash_equals" ],
        [ "equals", "equals" ],
        [ "equals", "equals_equals" ],
        [ "equals", "slash_equals" ],
        [
            "equals",
            { "not_equal": "=/=" }
        ],
        [ "greater_than", "equals" ],
        [ "greater_than", "equals_equals" ],
        [
            "greater_than",
            { "not_equal": "=/=" }
        ],
        [ "less_than", "equals" ],
        [ "less_than", "equals_equals" ],
        [
            "less_than",
            { "not_equal": "=/=" }
        ],
        [ "identifier", "identifier" ],
        [ "identifier", "keyword" ],
        [ "identifier", "integer_literal" ],
        [ "integer_literal", "integer_literal" ],
        [
            { "string_literal": "\"\\" },
            "token"
        ],
        [
            { "string_literal": "\"\\" },
            "whitespace"
        ],
        [
            { "string_literal": "\"\\" },
            "comment"
        ],
        [
            { "string_literal": "\"\\" },
            "identifier"
        ],
        [
            { "string_literal": "\"\\" },
            "keyword"
        ],
        [ "keyword", "identifier" ],
        [ "keyword", "keyword" ],
        [ "keyword", "integer_literal" ]
    ]
}
