public fn main()
{
    let test: mut Test = new Test();
    // None of these are errors because the variable holding the borrow isn't used
    {
        let shared: Test = capture_share(test);
        borrow(mut test);
    }
    {
        let borrowed: mut Test = capture_borrow(mut test);
        borrow(mut test);
    }
    {
        let borrowed: mut Test = capture_borrow(mut test);
        share(test);
    }
}

public mut class Test
{
}

public fn share(test: Test)
{
}

public fn borrow(test: mut Test)
{
}

public fn capture_share(test: Test)-> Test ~> test
{
    return test;
}

public fn capture_borrow(test: mut Test) -> mut Test ~> test
{
    return mut test;
}
